/*
 * Copyright (c) 2022 weteor
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUMBER 1
#define SYMBOL 2
#define ARROW 3
#define TMUX 4
#define CFG_L 5
#define BLE_L 6
#define GAME 7

// repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp TAB>;
        };
        
         combo_alt {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LALT>;
        };
    };

    behaviors {
    };
    
    //&sl {
    //release-after-ms = <750>;
    //};
    
// COMBOS
// vertical
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | 
// |  /  |  [  |  {  |  (  |  =  |     |  *  |  )  |  }  |  ]  |  \  |  
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  '  | 
//
// others:
// Q + W - escape
// W + E - tab
// I + O - backspace
// C + , - word caps
// both inner thumbs -> Layer CFG
// both left thumbs  -> Layer BLE

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = " Base";
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  | 
// |A sft|S win|D alt|F ctl|  G  |  H  |J ctl|K alt|L win|' sft| 
// |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  ;  | 
// |     |     |xxxxx| Nav | Spc/| Ent | Sym |xxxxx|     |     |
//                           Num
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE
		&kp Q &kp W &kp E &kp R &kp T 						        &kp Y &kp U  &kp I    &kp O   &kp P 
                &kp A &lt TMUX S &lt NUMBER D &lt ARROW F &kp G 	        	        &kp H &kp J &kp K &kp L &kp SEMICOLON
		&mt LSFT Z &kp X &kp C &kp V &kp B				                &kp N &kp M  &kp CMMA &kp DOT &mt LSFT SLASH

          	&none &none &mt LGUI ESC &lt SYMBOL SPACE   			 &lt SYMBOL ENTER  &mt LCTRL BSPC &none &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        
        number_layer {
            label = " Symbol";
// -------------------------------     -------------------------------
// |  `  |  ^  |  @  |  $  |  ~  |  -  |     |     |     |     |     | 
// |  &  |  !  |  +  |  _  |  #  |     |pg up| ctrl| ralt| gui | sft | 
// |  |  |  ?  |  -  |  %  |     |  -  |pg dn|     |     |     |     | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N7 &kp N8 &kp N9    &trans     
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N4 &kp N5 &kp N6    &trans 
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N1 &kp N2 &kp N3    &trans
                                   &trans &trans         &trans    &trans                         &kp N0     &kp N0 &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        symbol_layer {
            label = " Navigation";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  |     |pg dn| up  |pg up| del | 
// | sft | gui | alt | ctrl|     |     |home |left |down |right| end | 
// |     |     |     |     |     |  -  |     |prev | play|stop | next| 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
              &kp EXCL &kp AT    &kp HASH &kp DOLLAR &kp PERCENT                &kp CARET &kp AMPERSAND &kp ASTERISK  &kp PIPE &kp BACKSLASH
              &kp TILDE    &kp GRAVE    &kp KP_PLUS    &kp UNDER    &trans              &kp LPAR    &kp LBKT    &kp LBRC    &kp SQT    &kp DQT  
              &kp EQUAL    &kp KP_PLUS    &kp KP_MINUS    &trans    &trans            &kp RPAR    &kp RBKT    &kp RBRC    &kp UNDER    &kp KP_MINUS  
                &trans &trans               &bt BT_CLR   &kp TILDE            &kp UNDER    &kp KP_PLUS  &trans &trans 
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
        
        arrow_layer {
            label = " Numbers and F-Keys";
// -------------------------------     -------------------------------
// |     |  F9 | F10 | F11 | F12 |  -  |  +  | num7| num8| num9|  /  | 
// |     |  F5 |  F6 |  F7 |  F8 |     |  0  | num4| num5| num6|  .  | 
// |     |  F1 |  F2 |  F3 |  F4 |  -  |  -  | num1| num2| num3|  *  | 
// |     |     |xxxxx|     |     |     |  =  | ent |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &kp C_MUTE 
              &trans    &trans    &trans    &trans    &trans                         &bt BT_CLR    &trans    &trans    &trans    &trans     
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  
              &trans    &trans    &trans    &trans    &trans                        &trans    &trans    &trans    &trans    &trans
                                  &trans    &trans   &trans    &trans &trans    &trans    &trans    &trans  
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        tmux_layer {
            label = " Configuration";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |numlk|PSCRN|     |     |     |  -  | BT0 | BT1 | BT2 | BT3 | BT4 | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &none
                &kp C       &none       &reset       &none       &bootloader               &out OUT_USB &out OUT_BLE &kp LA(I)    &none        &bt BT_CLR
                &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
                &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans 
                   &none        &none         &none                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
            >;
        };
        
        cfg_layer {

            label = " Configuration";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |numlk|PSCRN|     |     |     |  -  | BT0 | BT1 | BT2 | BT3 | BT4 | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &none
                &kp C       &none       &reset       &none       &bootloader               &out OUT_USB &out OUT_BLE &kp LA(I)    &none        &bt BT_CLR
                &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
                &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans 
                   &none        &none         &none                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
            >;
        };
        
        ble_layer {

            label = " Configuration";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |numlk|PSCRN|     |     |     |  -  | BT0 | BT1 | BT2 | BT3 | BT4 | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &none
                &kp C       &none       &reset       &none       &bootloader               &out OUT_USB &out OUT_BLE &kp LA(I)    &none        &bt BT_CLR
                &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
                &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans 
                   &none        &none         &none                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
            >;
        };
        
        game_layer {

            label = " Configuration";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |numlk|PSCRN|     |     |     |  -  | BT0 | BT1 | BT2 | BT3 | BT4 | 
// |     |     |xxxxx|     |     |     |     |     |xxxxx|     |     |
// -------------------------------     -------------------------------
            bindings = <
                &none
                &kp C       &none       &reset       &none       &bootloader               &out OUT_USB &out OUT_BLE &kp LA(I)    &none        &bt BT_CLR
                &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
                &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans 
                   &none        &none         &none                   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
            >;
        };
    };
};


